# -*- coding: utf-8 -*-
"""exp06_IPCV-highpass and boost.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14-xOheNknnQtyR8_vJCZVqEeQMfNEqkB
"""

import numpy as np
import matplotlib.pyplot as plt
import random
from keras.datasets import fashion_mnist

(x_train, y_train), (x_test, y_test) = fashion_mnist.load_data()

plt.imshow(x_train[11])

def display_image(before, after, before_title, after_title):
  plt.subplot(1,2,1)
  plt.imshow(before, cmap='gray')
  plt.title(before_title)
  plt.subplot(1,2,2)
  plt.imshow(after, cmap='gray')
  plt.title(after_title)
  plt.show()

from scipy.ndimage import convolve

#  TASK 1 - HIGH PASS FILTER

def highpassfilter(image):
  kernel = np.array([[-1,-1,-1],
                     [-1,8,-1],
                     [-1,-1,-1]])
  kernel = kernel / np.sum(np.abs(kernel))
  filtered_image = convolve(image, kernel)
  filtered_image = np.clip(filtered_image * 255, 0, 255).astype(np.uint8)
  return filtered_image

image = x_train[11]
highpassfiltered_img = highpassfilter(image)
display_image(image, highpassfiltered_img, "Original Image", "High pass filtered image")

#  TASK 2 - HIGH BOOST FILTER

def highboostfilter(image, boost_factor=0.2):
  kernel = np.array([[-1,-1,-1],
                     [-1,8,-1],
                     [-1,-1,-1],])
  kernel = kernel / np.sum(np.abs(kernel))
  filtered_image = convolve(image, kernel*boost_factor)
  filtered_image = np.clip(filtered_image * 255, 0, 255).astype(np.uint8)
  return filtered_image

image = x_train[11]
highboostfiltered_img = highboostfilter(image)
display_image(image, highboostfiltered_img, "Original Image", "High Boost filtered image")

